/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void leftClick(GButton source, GEvent event) { //_CODE_:leftBtn:308221:
  myPort.write('L');
  showCommands.setText("Zumo moved left");
} //_CODE_:leftBtn:308221:

public void rightClick(GButton source, GEvent event) { //_CODE_:rightBtn:604378:
  myPort.write('R');
  showCommands.setText("Zumo moved right");
} //_CODE_:rightBtn:604378:

public void forwardClick(GButton source, GEvent event) { //_CODE_:forwardBtn:348760:
  myPort.write('F');
  showCommands.setText("Zumo moved forward");
} //_CODE_:forwardBtn:348760:

public void backClick(GButton source, GEvent event) { //_CODE_:backBtn:984108:
   myPort.write('B');
   showCommands.setText("Zumo is reversing");
} //_CODE_:backBtn:984108:

public void stopClick(GButton source, GEvent event) { //_CODE_:stopBtn:713639:
  myPort.write('S');
  showCommands.setText("Stop Zumo");
} //_CODE_:stopBtn:713639:

public void autoAction(GButton source, GEvent event) { //_CODE_:autoBtn:225239:
  myPort.write('A');
  showCommands.setText("Automated Mode Activated");
} //_CODE_:autoBtn:225239:

public void showCommandsAction(GTextField source, GEvent event) { //_CODE_:showCommands:358095:
} //_CODE_:showCommands:358095:

public void calibrateAction(GButton source, GEvent event) { //_CODE_:calibrateBtn:772610:
 myPort.write('t');
 showCommands.setText("Calibrating zumo!");
} //_CODE_:calibrateBtn:772610:

public void roomLeftAction(GButton source, GEvent event) { //_CODE_:roomLeftBtn:308807:
 myPort.write('l');
 showCommands.setText("Room to the left found");
} //_CODE_:roomLeftBtn:308807:

public void showTextAction(GTextArea source, GEvent event) { //_CODE_:showText:987080:
} //_CODE_:showText:987080:

public void showRoomAction(GTextField source, GEvent event) { //_CODE_:showRoom:967927:
} //_CODE_:showRoom:967927:

public void roomRightAction(GButton source, GEvent event) { //_CODE_:roomRightbtn:427325:
 myPort.write('r');
 showCommands.setText("Room to the right found");
} //_CODE_:roomRightbtn:427325:

public void junctionAction(GButton source, GEvent event) { //_CODE_:junctionActionBtn:827796:
  println("junctionActionBtn - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:junctionActionBtn:827796:

public void RightCorridorAction(GButton source, GEvent event) { //_CODE_:RightCorridorBtn:999615:
  println("RightCorridorBtn - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:RightCorridorBtn:999615:

public void LeftCorridorAction(GButton source, GEvent event) { //_CODE_:LeftCorridorBtn:928367:
  println("LeftCorridorBtn - GButton >> GEvent." + event + " @ " + millis());
} //_CODE_:LeftCorridorBtn:928367:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.ORANGE_SCHEME);
  G4P.setCursor(ARROW);
  surface.setTitle("Sketch Window");
  leftBtn = new GButton(this, 10, 73, 80, 30);
  leftBtn.setText("Left");
  leftBtn.setTextBold();
  leftBtn.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  leftBtn.addEventHandler(this, "leftClick");
  rightBtn = new GButton(this, 191, 75, 80, 30);
  rightBtn.setText("Right");
  rightBtn.setTextBold();
  rightBtn.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  rightBtn.addEventHandler(this, "rightClick");
  forwardBtn = new GButton(this, 99, 39, 80, 30);
  forwardBtn.setText("Forward");
  forwardBtn.setTextBold();
  forwardBtn.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  forwardBtn.addEventHandler(this, "forwardClick");
  backBtn = new GButton(this, 100, 113, 80, 30);
  backBtn.setText("Back");
  backBtn.setTextBold();
  backBtn.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  backBtn.addEventHandler(this, "backClick");
  stopBtn = new GButton(this, 100, 75, 80, 30);
  stopBtn.setText("Stop");
  stopBtn.setTextBold();
  stopBtn.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  stopBtn.addEventHandler(this, "stopClick");
  label1 = new GLabel(this, 20, 150, 140, 20);
  label1.setText("Messages from Zumo:");
  label1.setTextBold();
  label1.setLocalColorScheme(GCScheme.YELLOW_SCHEME);
  label1.setOpaque(false);
  autoBtn = new GButton(this, 410, 40, 80, 30);
  autoBtn.setText("Auto Move");
  autoBtn.setTextBold();
  autoBtn.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  autoBtn.addEventHandler(this, "autoAction");
  label2 = new GLabel(this, 310, 250, 160, 20);
  label2.setText("Commands sent to Zumo:");
  label2.setTextBold();
  label2.setLocalColorScheme(GCScheme.YELLOW_SCHEME);
  label2.setOpaque(false);
  showCommands = new GTextField(this, 310, 270, 160, 30, G4P.SCROLLBARS_NONE);
  showCommands.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  showCommands.setOpaque(true);
  showCommands.addEventHandler(this, "showCommandsAction");
  calibrateBtn = new GButton(this, 314, 38, 80, 30);
  calibrateBtn.setText("Calibrate");
  calibrateBtn.setTextBold();
  calibrateBtn.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  calibrateBtn.addEventHandler(this, "calibrateAction");
  roomLeftBtn = new GButton(this, 517, 73, 80, 30);
  roomLeftBtn.setText("Room to Left");
  roomLeftBtn.setTextBold();
  roomLeftBtn.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  roomLeftBtn.addEventHandler(this, "roomLeftAction");
  showText = new GTextArea(this, 20, 170, 250, 80, G4P.SCROLLBARS_VERTICAL_ONLY | G4P.SCROLLBARS_AUTOHIDE);
  showText.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  showText.setOpaque(true);
  showText.addEventHandler(this, "showTextAction");
  showRoom = new GTextField(this, 20, 270, 280, 30, G4P.SCROLLBARS_NONE);
  showRoom.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  showRoom.setOpaque(true);
  showRoom.addEventHandler(this, "showRoomAction");
  label3 = new GLabel(this, 20, 250, 90, 20);
  label3.setText("Room details:");
  label3.setTextBold();
  label3.setLocalColorScheme(GCScheme.YELLOW_SCHEME);
  label3.setOpaque(false);
  roomRightbtn = new GButton(this, 605, 73, 80, 30);
  roomRightbtn.setText("Room to Right");
  roomRightbtn.setTextBold();
  roomRightbtn.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  roomRightbtn.addEventHandler(this, "roomRightAction");
  sketchPad1 = new GSketchPad(this, 210, 130, 80, 60);
  junctionActionBtn = new GButton(this, 561, 109, 80, 30);
  junctionActionBtn.setText("T-Junction");
  junctionActionBtn.setTextBold();
  junctionActionBtn.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  junctionActionBtn.addEventHandler(this, "junctionAction");
  label4 = new GLabel(this, 557, 12, 80, 19);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Mapping");
  label4.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  label4.setOpaque(false);
  RightCorridorBtn = new GButton(this, 604, 38, 80, 30);
  RightCorridorBtn.setText("Corridor to Right");
  RightCorridorBtn.setTextBold();
  RightCorridorBtn.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  RightCorridorBtn.addEventHandler(this, "RightCorridorAction");
  LeftCorridorBtn = new GButton(this, 517, 39, 80, 30);
  LeftCorridorBtn.setText("Corridor to Left");
  LeftCorridorBtn.setTextBold();
  LeftCorridorBtn.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  LeftCorridorBtn.addEventHandler(this, "LeftCorridorAction");
  label5 = new GLabel(this, 364, 12, 80, 20);
  label5.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label5.setText("Commands");
  label5.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  label5.setOpaque(false);
  label6 = new GLabel(this, 99, 12, 80, 20);
  label6.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label6.setText("Movement");
  label6.setLocalColorScheme(GCScheme.BLUE_SCHEME);
  label6.setOpaque(false);
}

// Variable declarations 
// autogenerated do not edit
GButton leftBtn; 
GButton rightBtn; 
GButton forwardBtn; 
GButton backBtn; 
GButton stopBtn; 
GLabel label1; 
GButton autoBtn; 
GLabel label2; 
GTextField showCommands; 
GButton calibrateBtn; 
GButton roomLeftBtn; 
GTextArea showText; 
GTextField showRoom; 
GLabel label3; 
GButton roomRightbtn; 
GSketchPad sketchPad1; 
GButton junctionActionBtn; 
GLabel label4; 
GButton RightCorridorBtn; 
GButton LeftCorridorBtn; 
GLabel label5; 
GLabel label6; 
